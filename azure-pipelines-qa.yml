trigger:
  branches:
    include:
      - QA

resources:
  repositories:
    - repository: self

variables:
  dockerRegistryServiceConnection: 'composeglowQA'
  imageRepository: 'compose-integration'
  containerRegistry: 'composeglowqa.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  helmChartPath: 'charts/compose-integration'
  pool: Glow-DevOps-agent
  SONAR_TOKEN: $(SONAR_TOKEN)
  azureSubscription: 'Compose Microsoft ScaleUP(71ed5ac2-8e28-4443-88cd-ad372db5a3ac)'
  azureSubscriptionConnection: 'rg-compose-glow-qa-norwayeast-001'
  resourceGroupName: 'rg-compose-glow-qa-norwayeast-001'
  aksClusterName: 'aks-compose-glow-qa-norwayeast-001'
  namespace: 'compose-backend'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool: $(pool)
        steps:
          - script: |
              sudo update-alternatives --set java /usr/lib/jvm/jdk-17.0.12/bin/java
              sudo update-alternatives --set javac /usr/lib/jvm/jdk-17.0.12/bin/javac
              export JAVA_HOME=/usr/lib/jvm/jdk-17.0.12
              export PATH=$JAVA_HOME/bin:$PATH
              java -version
            displayName: Set Java 17 as the default version

          - task: Gradle@3
            inputs:
              gradleWrapperFile: 'gradlew'
              options: 'bootjar'
              tasks: 'bootjar'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              javaHomeOption: 'Path'
              jdkUserInputPath: '/usr/lib/jvm/jdk-17.0.12'
              sonarQubeRunAnalysis: false
              spotBugsAnalysis: false

          - task: Docker@2 
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

         # - task: Bash@3
         #   displayName: 'Sonar'
         #   inputs:
         #     targetType: 'inline'
         #     script: |
         #       sudo update-alternatives --set java /usr/lib/jvm/jdk-17.0.12/bin/java
         #       sudo update-alternatives --set javac /usr/lib/jvm/jdk-17.0.12/bin/javac
         #       export JAVA_HOME=/usr/lib/jvm/jdk-17.0.12
         #       export PATH=$JAVA_HOME/bin:$PATH
         #       java -version
         #       export SONAR_TOKEN=404e03c44e641ca07290964eadf5a03cc9a88ba0
         #       ./gradlew sonar 

          - task: PublishBuildArtifacts@1
            displayName: Publish Helm chart as artifact
            inputs:
              PathtoPublish: '$(helmChartPath)'
              ArtifactName: 'helm-chart'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: Deploy to AKS
        pool: $(pool)
        steps:
          - download: current
            artifact: helm-chart

          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: 'latest'
            displayName: Install Helm

          - task: AzureCLI@2
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az aks get-credentials --resource-group $(resourceGroupName) --name $(aksClusterName)
                helm upgrade --install compose-integration $(Pipeline.Workspace)/helm-chart \
                  --set image.repository=$(containerRegistry)/$(imageRepository) \
                  --set image.tag=$(tag) \
                  --namespace $(namespace)\
                  -f $(Pipeline.Workspace)/helm-chart/values-qa.yaml
            displayName: Deploy with Helm

