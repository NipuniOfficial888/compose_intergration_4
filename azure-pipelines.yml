trigger:
  branches:
    include:
      - Dev

resources:
  repositories:
    - repository: self

variables:
  dockerRegistryServiceConnection: 'DockerHubServiceConnection'
  imageRepository: 'nipuniofficial/repo_1'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  helmChartPath: 'charts/compose-integration'
  pool: 'Local-Windows-Agent'
  namespace: 'compose'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool: $(pool)
        steps:
          # Increase Git buffer size to prevent RPC errors
          - script: |
              git config --global http.postBuffer 524288000
            displayName: Increase Git buffer size

          # Set Java version
          - script: |
              set JAVA_HOME="C:\Program Files\Java\jdk-17"
              set PATH=%JAVA_HOME%\bin;%PATH%
              java -version
            displayName: Set Java 17 as the default version

          # Build with Gradle
          - task: Gradle@3
            inputs:
              gradleWrapperFile: 'gradlew'
              options: 'bootjar'
              tasks: 'bootjar'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              javaHomeOption: 'Path'
              jdkUserInputPath: 'C:\Program Files\Java\jdk-17'
              sonarQubeRunAnalysis: false
              spotBugsAnalysis: false

          # Build and push Docker image
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

          # Publish Helm chart as artifact
          - task: PublishBuildArtifacts@1
            displayName: Publish Helm chart as artifact
            inputs:
              PathtoPublish: '$(helmChartPath)'
              ArtifactName: 'helm-chart'
              publishLocation: 'Container'
