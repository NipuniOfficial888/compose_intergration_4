plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id 'org.sonarqube' version '4.4.1.3373'
}

group = 'com.compose'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault-secrets:5.15.0'

	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.28'
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.28'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
	testImplementation 'org.mockito:mockito-core:5.2.0'
	testImplementation 'org.mockito:mockito-inline:5.2.0'
	testImplementation 'org.instancio:instancio-junit:2.6.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	reports {
		html.required.set(true)
		html.outputLocation.set(file("${buildDir}/jacoco/test/html"))
	}
}


sonar {
  properties {
    property "sonar.projectKey", "composetogo_compose-integration"
    property "sonar.organization", "composetogo"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}